<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	
	<!-- Datasource 생성 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://192.168.1.220:3306/test"/>
		<property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
		<property name="username" value="root"/>
		<property name="password" value="1234"/> 		<!-- db연결 -->
	</bean>
	
	<bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://localhost:3306/test"/>
		<property name="driverClassName" value="org.mariadb.jdbc.Driver"/>
		<property name="username" value="root"/>
		<property name="password" value="1234"/> 		<!-- db연결 -->
	</bean>
	
	<!-- SqlSessionFactory 생성 -->
	<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">  <!-- Sqlconnection이 생성된다. 이것이 생성되면 DB가 연결이된다. -->
		<property name="mapperLocations" value="classpath:/sql/*.xml"/>
		<property name="dataSource" ref="dataSource"/> <!-- ref : 참조  -->		<!-- mybatis 셋팅 -->
	</bean>
	
	<bean id="factoryBean2" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="mapperLocations" value="classpath:/sql/*.xml"/>
		<property name="dataSource" ref="dataSource2"/> <!-- ref : 참조  -->	
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> <!-- sqlsessionfactory라는 sql창고가 생기는데 거기서 하나씩 빼서 쓰겠다 ! -->
		<constructor-arg name="sqlSessionFactory" ref="factoryBean"/>	<!-- 얘를 쓰기위해 위의 두개가 필요하다 참조(ref) datasource -> 참조 factorybean 한것이 session -->
																		<!-- session이 동작될때 트렌젝션이 왔다갔다 한다. DAO가 세션을 동작시키는데 세션을 동작시키는 행위가 곧 트렌젝션이다.-->
	</bean>
	
	<bean id="sqlSession2" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg name="sqlSessionFactory" ref="factoryBean2"/>	
																	
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> <!--파일 업로드시 용량 제한 하는것.-->
      <property name="maxUploadSize" value="10485760"/> 
      <property name="maxInMemorySize" value="104857600"/>
   </bean>

	<!-- Bean 생성 연습 -->	
	<!-- <bean id="testService" class="com.java.test.temp.TestService" > 이 한줄이 annotation과 같다. xml에 만들었을 뿐
		 <property name="type" value="select"></property> 
		 <property name="session" ref="sqlSession"></property>
	</bean> -->
		<!-- <property name="type"value="select"></property>  이거대신에 namespace를 넣어서 위에 축약이 가능하다.--> 
</beans>
